{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Fanuc Karel Language",
	"scopeName": "source.fanuctp_kl",
	"fileTypes": [
		"kl"
	],
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#statements"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#directives"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#types"
		},
		{
			"include": "#structures"
		},
		{
			"include": "#actions"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#clauses"
		},
		{
			"include": "#conditionals"
		},
		{
			"include": "#repeats"
		},
		{
			"include": "#builtins"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.fanuctp_kl",
					"match": "\\b(BEGIN|CONST|END|PROGRAM|ROUTINE|STRUCT|TYPE|VAR|OF|TO|DOWNTO)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.fanuctp_kl",
					"begin": "'",
					"end": "'"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "numeric.decimal.fanuctp_kl",
					"match": "\\b\\d+\\.\\d+\\b"
				},
				{
					"name": "numeric.integer.fanuctp_kl",
					"match": "\\b\\d+\\b"
				}
			]
		},
		"booleans": {
			"patterns": [
				{
					"name": "boolean.true.fanuctp_kl",
					"match": "\\b(true|TRUE)\\b"
				},
				{
					"name": "boolean.false.fanuctp_kl",
					"match": "\\b(false|FALSE)\\b"
				}
			]
		},
		"directives": {
			"patterns": [
				{
					"name": "directive.fanuctp_kl",
					"match": "%[a-zA-Z]+"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "operator.words.fanuctp_kl",
					"match": "\\b(AND|OR|NOT|DIV|MOD)\\b"
				},
				{
					"name": "operator.symbols.fanuctp_kl",
					"match": "[\\+\\-\\*\\/\\<\\=\\>\\:\\#\\@\\&]|<=|>=|<>|>=<"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "type.storage.fanuctp_kl",
					"match": "\\b(ARRAY|BOOLEAN|BYTE|CONFIG|DISP_DAT_T|FILE|INTEGER|JOINTPOS|PATH|POSITION|QUEUE_TYPE|REAL|SHORT|STD_PTH_NODE|STRING|VECTOR|XYZWPR|XYZWPREXT)\\b"
				},
				{
					"name": "type.system_variable.fanuctp_kl",
					"match": "\\$\\w+"
				}
			]
		},
		"structures": {
			"patterns": [
				{
					"name": "structure.fanuctp_kl",
					"match": "\\b(STRUCTURE|ENDSTRUCTURE)\\b"
				}
			]
		},
		"actions": {
			"patterns": [
				{
					"name": "action.control.fanuctp_kl",
					"match": "\\b(NOABORT|NOMESSAGE|NOPAUSE|PAUSE|PULSE|RESUME|STOP|UNHOLD|UNPAUSE)\\b"
				},
				{
					"name": "action.signal.fanuctp_kl",
					"match": "\\b(SIGNAL|EVENT|SEMAPHORE)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "functions.fanuctp_kl",
					"match": "\\b(ABS|ACOS|ARRAY_LEN|ASIN|ATAN2|BYNAME|CHR|COS|EXP|GET_VAR|INDEX|INV|LN|ORD|ROUND|SET_VAR|SIN|SQRT|TAN|TRUNC|UNINIT)\\b"
				}
			]
		},
		"clauses": {
			"patterns": [
				{
					"name": "clauses.fanuctp_kl",
					"match": "\\b(EVAL|FROM|IN|WHEN|WITH)\\b"
				}
			]
		},
		"conditionals": {
			"patterns": [
				{
					"name": "conditionals.fanuctp_kl",
					"match": "\\b(IF|THEN|ELSE|ENDIF|SELECT|ENDSELECT|CASE)\\b"
				}
			]
		},
		"repeats": {
			"patterns": [
				{
					"name": "repeats.fanuctp_kl",
					"match": "\\b(DO|WHILE|ENDWHILE|FOR|ENDFOR)\\b"
				}
			]
		},
		"builtins": {
			"patterns": [
				{
					"name": "builtin.byname.fanuctp_kl",
					"match": "\\b(CALL_PROG|CALL_PROGLIN|CURR_PROG|FILE_LIST|PROG_LIST|VAR_INFO|VAR_LIST)\\b"
				},
				{
					"name": "builtin.data_acquisition.fanuctp_kl",
					"match": "\\b(DAQ_CHECKP|DAQ_REGPIPE|DAQ_START|DAQ_STOP|DAQ_UNREG|DAQ_WRITE)\\b"
				},
				{
					"name": "builtin.robot_data_transfer.fanuctp_kl",
					"match": "\\b(RGET_PORTCMT|RGET_PORTSIM|RGET_PORTVAL|RGET_PREGCMT|RGET_REG|RGET_REG_CMT|RGET_SREGCMT|RGET_STR_REG|RNREG_RECV|RNREG_SEND|RPREG_RECV|RPREG_SEND|RSET_INT_REG|RSET_PORTCMT|RSET_PORTSIM|RSET_PORTVAL|RSET_PREGCMT|RSET_REALREG|RSET_REG_CMT|RSET_SREGCMT|RSET_STR_REG)\\b"
				},
				{
					"name": "builtin.error_handling.fanuctp_kl",
					"match": "\\b(ERR_DATA|POST_ERR|POST_ERR_L)\\b"
				},
				{
					"name": "builtin.file_device_operation.fanuctp_kl",
					"match": "\\b(CHECK_NAME|COMPARE_FILE|COPY_FILE|DELETE_FILE|DISMOUNT_DEV|DOSFILE_INF|FORMAT_DEV|MOUNT_DEV|MOVE_FILE|PRINT_FILE|PURGE_DEV|RENAME_FILE|XML_ADDTAG|XML_GETDATA|XML_REMTAG|XML_SCAN|XML_SETVAR)\\b"
				},
				{
					"name": "builtin.iphone_communications.fanuctp_kl",
					"match": "\\b(RMCN_ALERT|RMCN_SEND)\\b"
				},
				{
					"name": "builtin.kcl_operation.fanuctp_kl",
					"match": "\\b(KCL|KCL_NO_WAIT|KCL_STATUS)\\b"
				},
				{
					"name": "builtin.memory_operation.fanuctp_kl",
					"match": "\\b(CLEAR|CREATE_VAR|LOAD|LOAD_STATUS|PROG_BACKUP|PROG_CLEAR|PROG_RESTORE|RENAME_VAR|RENAME_VARS|SAVE|SAVE_DRAM)\\b"
				},
				{
					"name": "builtin.mirror.fanuctp_kl",
					"match": "\\b(MIRROR)\\b"
				},
				{
					"name": "builtin.motion_control.fanuctp_kl",
					"match": "\\b(CNCL_STP_MTN|MOTION_CTL|RESET)\\b"
				},
				{
					"name": "builtin.multi_programming.fanuctp_kl",
					"match": "\\b(ABORT_TASK|CLEAR_SEMA|CONT_TASK|GET_TSK_INFO|LOCK_GROUP|PAUSE_TASK|PEND_SEMA|POST_SEMA|RUN_TASK|SEMA_COUNT|SET_TSK_ATTR|SET_TSK_NAME|UNLOCK_GROUP)\\b"
				},
				{
					"name": "builtin.path_operation.fanuctp_kl",
					"match": "\\b(APPEND_NODE|COPY_PATH|DELETE_NODE|INSERT_NODE|NODE_SIZE|PATH_LEN)\\b"
				},
				{
					"name": "builtin.pc_comms.fanuctp_kl",
					"match": "\\b(ADD_BYNAMEPC|ADD_INTPC|ADD_REALPC|ADD_STRINGPC|SEND_DATAPC|SEND_EVENTPC|MQTT_DISCON|MQTT_PUBLISH|MQTT_CONNECT)\\b"
				},
				{
					"name": "builtin.position.fanuctp_kl",
					"match": "\\b(CHECK_EPOS|CNV_JPOS_REL|CNV_REL_JPOS|CURPOS|CURJPOS|FRAME|IN_RANGE|J_IN_RANGE|JOINT2POS|POS|POS2JOINT|SET_PERCH|UNPOS)\\b"
				},
				{
					"name": "builtin.process_io_setup.fanuctp_kl",
					"match": "\\b(CLR_PORT_SIM|GET_PORT_ASG|GET_PORT_CMT|GET_PORT_MOD|GET_PORT_SIM|GET_PORT_VAL|IO_MOD_TYPE|SET_PORT_ASG|SET_PORT_CMT|SET_PORT_MOD|SET_PORT_SIM|SET_PORT_VAL)\\b"
				},
				{
					"name": "builtin.queue_manager.fanuctp_kl",
					"match": "\\b(APPEND_QUEUE|COPY_QUEUE|DELETE_QUEUE|GET_QUEUE|INIT_QUEUE|INSERT_QUEUE|MODIFY_QUEUE)\\b"
				},
				{
					"name": "builtin.register_operation.fanuctp_kl",
					"match": "\\b(CLR_POS_REG|GET_JPOS_REG|GET_POS_REG|GET_PREG_CMT|GET_REG|GET_REG_CMT|GET_SREG_CMT|GET_STR_REG|POS_REG_TYPE|SET_EPOS_REG|SET_INT_REG|SET_JPOS_REG|SET_POS_REG|SET_PREG_CMT|SET_REAL_REG|SET_REG_CMT|SET_SREG_CMT|SET_STR_REG)\\b"
				},
				{
					"name": "builtin.serial_io.fanuctp_kl",
					"match": "\\b(BYTES_AHEAD|BYTES_LEFT|CLR_IO_STAT|GET_FILE_POS|GET_PORT_ATR|IO_STATUS|MSG_CONNECT|MSG_DISCO|MSG_PING|PIPE_CONFIG|SET_FILE_ATR|SET_FILE_POS|SET_PORT_ATR|VOL_SPACE)\\b"
				},
				{
					"name": "builtin.string_operation.fanuctp_kl",
					"match": "\\b(CNV_CNF_STRG|CNV_CONF_STR|CNV_INT_STR|CNV_REAL_STR|CNV_STR_CONF|CNV_STR_INT|CNV_STR_REAL|STR_LEN|SUB_STR)\\b"
				},
				{
					"name": "builtin.time_of_day.fanuctp_kl",
					"match": "\\b(CNV_STR_TIME|CNV_TIME_STR|GET_TIME|GET_USEC_SUB|GET_USEC_TIM|SET_TIME)\\b"
				},
				{
					"name": "builtin.tpe_program.fanuctp_kl",
					"match": "\\b(AVL_POS_NUM|CLOSE_TPE|COPY_TPE|CREATE_TPE|DEL_INST_TPE|GET_ATTR_PRG|GET_JPOS_TPE|GET_POS_FRM|GET_POS_TPE|GET_POS_TYP|GET_TPE_CMT|GET_TPE_PRM|OPEN_TPE|SELECT_TPE|SET_ATTR_PRG|SET_EPOS_TPE|SET_JPOS_TPE|SET_POS_TPE|SET_TPE_CMT|SET_TRNS_TPE)\\b"
				},
				{
					"name": "builtin.translate.fanuctp_kl",
					"match": "\\b(TRANSLATE)\\b"
				},
				{
					"name": "builtin.user_interface.fanuctp_kl",
					"match": "\\b(ACT_SCREEN|ADD_DICT|ACT_TBL|ATT_WINDOW_D|ATT_WINDOW_S|CHECK_DICT|CNC_DYN_DISB|CNC_DYN_DISE|CNC_DYN_DISI|CNC_DYN_DISP|CNC_DYN_DISR|CNC_DYN_DISS|DEF_SCREEN|DEF_WINDOW|DET_WINDOW|DISCTRL_ALPH|DISCTRL_FORM|DISCTRL_LIST|DISCTRL_PLMN|DISCTRL_SBMN|DISCTRL_TBL|FORCE_LINK|FORCE_SPMENU|INI_DYN_DISB|INI_DYN_DISE|INI_DYN_DISI|INI_DYN_DISP|INI_DYN_DISR|INI_DYN_DISS|INIT_TBL|POP_KEY_RD|PUSH_KEY_RD|READ_DICT|READ_DICT_V|READ_KB|REMOVE_DICT|SET_CURSOR|SET_LANG|WRITE_DICT|WRITE_DICT_V)\\b"
				},
				{
					"name": "builtin.vector.fanuctp_kl",
					"match": "\\b(APPROACH|ORIENT)\\b"
				},
				{
					"name": "builtin.vision_operation.fanuctp_kl",
					"match": "\\b(V_ACQ_VAMAP|V_ADJ_2D|V_CAM_CALIB|V_CAM_CHECK|V_CLR_VAMAP|V_CSAPI_GETVALUE|V_CSAPI_NUMSET|V_CSAPI_RESETDATA|V_CSAPI_SAVEDATA|V_CSAPI_SETVALUE|V_CSAPI_TESTRUN|V_DISPLAY4D|V_FIND_VIEW|V_FIND_VLINE|V_GET_FOUND|V_GET_OFFSET|V_GET_PASSFL|V_GET_READ|V_GET_VPARAM|V_IRCONNECT|V_LED_OFF|V_LED_ON|V_OVERRIDE|V_RUN_FIND|V_SAVE_IMREG|V_SET_REF|V_SNAP_VIEW|VREG_FND_POS|VREG_OFFSET|VT_ACK_QUEUE|VT_CLR_QUEUE|VT_DELETE_PQ|VT_GET_AREID|VT_GET_FOUND|VT_GET_LINID|VT_GET_PFRT|VT_GET_QUEUE|VT_GET_TIME|VT_GET_TRYID|VT_PUT_QUE2|VT_READ_PQ|VT_SET_FLAG|VT_SET_LDBAL|VT_WRITE_PQ)\\b"
				}
			]
		},
		"statements": {
			"patterns": [
				{
					"name": "statement.short.fanuctp_kl",
					"match": "\\b(ABORT|CONDITION|ENDCONDITION|CONTINUE|DELAY|ERROR|EVENT|HOLD|READ|RELEASE|REPEAT|RETURN|UNTIL|USING|ENDUSING|WRITE)\\b"
				},
				{
					"name": "statement.long.fanuctp_kl",
					"match": "\\b(CANCEL\\sFILE|CLOSE\\sFILE|CLOSE\\sHAND|CONNECT\\sTIMER|DISABLE\\sCONDITION|DISCONNECT\\sTIMER|ENABLE\\sCONDITION|GOTO|OPEN\\sFILE|OPEN\\sHAND|PURGE\\sCONDITION|RELAX\\sHAND|WAIT\\sFOR)\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.double-dash.fanuctp_kl",
          			"match": "--.*$"
				}
			]
		}
	}
}